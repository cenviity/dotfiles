"$schema" = "https://jj-vcs.github.io/jj/latest/config-schema.json"

[user]
name = "Vincent Ging Ho Yim"
email = "cenviity@gmail.com"

[ui]
default-command = "log"
{{- if lookPath "difft" }}
diff.tool = "difft"
{{- end }}
diff-editor = ":builtin"
merge-editor = "vscode"
pager = ":builtin"
log-word-wrap = true

[merge-tools.difft]
diff-args = ["--color=always", "$left", "$right"]
diff-invocation-mode = "file-by-file"

[hints]
resolving-conflicts = false

[colors]
# Highlight hunks with background
"diff removed token" = { bg = "#221111", underline = false }
"diff added token" = { bg = "#002200", underline = false }

[aliases]
a = ["abandon"]
ci = ["commit"]
# `diff staged`
ds = ["diff", "--from=@--"]
nc = ["next", "--conflict"]
pc = ["prev", "--conflict"]
rb = ["rebase"]
sq = ["squash"]
w = ["watch"]
watch = [
    "util",
    "exec",
    "--",
    "sh",
    "-c",
    "hwatch --color --no-title --interval 1 jj log --color always",
]

[templates]
log = "builtin_log_compact__wip"

[template-aliases]
"abbreviate_relative_timestamp(s)" = '''
coalesce(
    if(
        s.ends_with(" millisecond"),
        s.remove_suffix(" millisecond") ++ label("timestamp", "ms")
    ),
    if(
        s.ends_with(" second"),
        s.remove_suffix(" second") ++ label("timestamp", "s")
    ),
    if(
        s.ends_with(" minute"),
        s.remove_suffix(" minute") ++ label("timestamp", "m")
    ),
    if(
        s.ends_with(" hour"),
        s.remove_suffix(" hour") ++ label("timestamp", "h")
    ),
    if(
        s.ends_with(" day"),
        s.remove_suffix(" day") ++ label("timestamp", "d")
    ),
    if(
        s.ends_with(" week"),
        s.remove_suffix(" week") ++ label("timestamp", "w")
    ),
    if(
        s.ends_with(" month"),
        s.remove_suffix(" month") ++ label("timestamp", "mo")
    ),
    if(
        s.ends_with(" year"),
        s.remove_suffix(" year") ++ label("timestamp", "y")
    ),
    s
)
'''
# Taken from the default `format_timestamp(timestamp)`
"format_timestamp_long(timestamp)" = "timestamp.local().format('%Y-%m-%d %H:%M:%S')"
"format_timestamp(timestamp)" = '''
concat(
    coalesce(
        if(
            timestamp.after("1 minute ago"),
            label("timestamp", "<=1m")
        ),
        abbreviate_relative_timestamp(timestamp.ago().remove_suffix(' ago').remove_suffix('s'))
    ),
    if(
        timestamp.before("1 week ago"),
        ", " ++ format_timestamp_long(timestamp)
    )
)
'''
# For op log timestamps
"format_time_range(time_range)" = '''
concat(
    abbreviate_relative_timestamp(time_range.end().ago().remove_suffix(' ago').remove_suffix('s')),
    label("time", ", lasted "),
    abbreviate_relative_timestamp(time_range.duration().remove_suffix('s'))
)
'''
builtin_log_compact__wip = '''
if(
    root,
    format_root_commit(self),
    label(
        if(current_working_copy, "working_copy"),
        separate(
            "\n",
            format_short_commit_header(self),
            separate(
                " ",
                if(empty, label("empty", "(empty)")),
                if(
                    description,
                    description.first_line(),
                    label(if(empty, "empty"), description_placeholder),
                ),
            ),
            if(self.contained_in("wip_branch"), diff.summary()),
        ),
    )
)
'''

[revset-aliases]
# See https://github.com/jj-vcs/jj/blob/main/cli/src/config/revsets.toml
default = "present(@) | ancestors(immutable_heads().., 2) | present(trunk())"
private-commits = "description(glob-i:'wip:*') | description(glob-i:'private:*')"
# Revisions including and after the closest described revision
wip_branch = "heads(::@- ~ description(exact:'') ~ private-commits)::@ & mutable()"

[gg.ui]
theme-override = "dark"
